name: Backup and Restore

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *" # Run every even hour

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setting up SSH key and known hosts (Backup server)
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOST_KEY: ${{ secrets.HOST_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
          echo "$HOST_KEY" >> known_hosts

      - name: Run Ansible Playbook (Backup)
        run: |
          EXTRA_VARS=""
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            EXTRA_VARS="-e run_mode=manual"
          fi
          ansible-playbook $EXTRA_VARS .github/ansible/backup-playbook.yml -i .github/ansible/hosts.ini

      - name: Determine backup settings
        id: determine-backup-settings
        run: |
          current_utc_date=$(date --utc +%Y%m%dT%H%M%S)
          day_of_month=$(date --utc +%d)
          hour_of_day=$(date --utc +%H)
          day_of_week=$(date --utc +%A)
          retention=""
          artifact_name=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            retention="1"
            artifact_name="backup-manually"
          elif [[ "$day_of_month" == "01" && "$hour_of_day" == "00" ]]; then
            retention="200"
            artifact_name="backup-monthly"
          elif [[ "$day_of_week" == "Sunday" && "$hour_of_day" == "00" ]]; then
            retention="35"
            artifact_name="backup-weekly"
          elif [[ "$hour_of_day" == "00" ]]; then
            retention="15"
            artifact_name="backup-daily"
          else
            retention="10"
            artifact_name="backup-bihourly"
          fi
          echo "retention=$retention" >> $GITHUB_OUTPUT
          echo "artifact_name=$artifact_name" >> $GITHUB_OUTPUT

      - name: Upload backup artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.determine-backup-settings.outputs.artifact_name }}
          path: /tmp/backup/
          retention-days: ${{ steps.determine-backup-settings.outputs.retention }}
          if-no-files-found: error

      - name: Cleanup SSH Key and known hosts
        if: always()
        run: rm -f private_key known_hosts

  restore:
    needs: backup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.backup.outputs.artifact_name }}
          path: /tmp/backup

      - name: Setting up SSH key and known hosts (Restore server)
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOST_KEY_TEST: ${{ secrets.HOST_KEY_TEST }}
        run: |
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
          echo "$HOST_KEY_TEST" >> known_hosts

      - name: Run Ansible Playbook (Restore)
        run: ansible-playbook .github/ansible/test-restore-playbook.yml -i .github/ansible/hosts.ini

      - name: Cleanup SSH Key and known hosts
        if: always()
        run: rm -f private_key known_hosts
